/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IF_Administrador;

import Clases.*;
import Conexiones.*;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eduardogarcia
 */
public class IF_GestionAlumnos extends javax.swing.JInternalFrame {

    /**
     * Creates new form IF_GestionAlumnos
     */
    Estudiante mEstudiante;
    ConexionCinthia mCC = new ConexionCinthia();
    ConexionEduardo mCE = new ConexionEduardo();
    DefaultTableModel TablaAltaEst = new DefaultTableModel();
    DefaultTableModel TablaBajaEst = new DefaultTableModel();
    DefaultTableModel TablaCambioEst = new DefaultTableModel();
    DefaultTableModel TablaConsultaEst = new DefaultTableModel();
    int ID_BajaEst = 0, ID_CambioEst = 0;

    public IF_GestionAlumnos() {
        initComponents();

        //Para el alta de Estudiantes
        TablaAltaEst.addColumn("Nombre");
        TablaAltaEst.addColumn("Carrera");
        TablaAltaEst.addColumn("Número Control");
        BuscarTodosEstudiantes();

        //Para el alta de Estudiantes
        //TablaBajaEst.addColumn("ID");
        TablaBajaEst.addColumn("Nombre");
        TablaBajaEst.addColumn("Carrera");
        TablaBajaEst.addColumn("Número de Control");
        BuscarTodosEstudiantesBaja();

        //Para el cambio de Estudiantes
        //TablaCambioEst.addColumn("ID");
        TablaCambioEst.addColumn("Nombre");
        TablaCambioEst.addColumn("Carrera");
        TablaCambioEst.addColumn("Número de Control");
        BuscarTodosEstudiantesCambio();

        //Para la consulta de Estudiantes
        TablaConsultaEst.addColumn("Nombre");
        TablaConsultaEst.addColumn("Carrera");
        TablaConsultaEst.addColumn("Número de Control");
        LlenarComboCarrera();
        LlenarComboAsesor();
        BuscarTodosEstudiantesCambio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TBLaltaEstudiantes = new javax.swing.JTable();
        BTNalta = new javax.swing.JButton();
        TXTcarreraAlta = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TXTnombreAlta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        TXTnc = new javax.swing.JTextField();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        BTNborrar = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        TBLbajaEstudiantes = new javax.swing.JTable();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TBLcambiosEstudiantes = new javax.swing.JTable();
        BTNmodificar = new javax.swing.JButton();
        TXTcarreraCambios = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TXTnombreCambios = new javax.swing.JTextField();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        CBCarreraCons = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        CBAsesorCons = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        TBAlumnos = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(650, 620));

        TBLaltaEstudiantes.setModel(TablaAltaEst);
        jScrollPane6.setViewportView(TBLaltaEstudiantes);

        BTNalta.setText("Dar de alta");
        BTNalta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNaltaActionPerformed(evt);
            }
        });

        jLabel6.setText("Carrera:");

        jLabel5.setText("Nombre:");

        jLabel1.setText("Número Control:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXTnc, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTcarreraAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTnombreAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(211, 211, 211)
                            .addComponent(BTNalta)))
                    .addContainerGap(272, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(TXTnombreAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TXTcarreraAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(TXTnc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(72, 72, 72)
                    .addComponent(jLabel5)
                    .addGap(27, 27, 27)
                    .addComponent(jLabel6)
                    .addGap(89, 89, 89)
                    .addComponent(BTNalta)
                    .addContainerGap(268, Short.MAX_VALUE)))
        );

        jTabbedPane2.addTab("Dar de alta un alumno", jPanel1);

        jTabbedPane1.addTab("Alta", jTabbedPane2);

        BTNborrar.setText("Borrar");
        BTNborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNborrarActionPerformed(evt);
            }
        });

        TBLbajaEstudiantes.setModel(TablaBajaEst);
        TBLbajaEstudiantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBLbajaEstudiantesMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(TBLbajaEstudiantes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(BTNborrar)
                .addContainerGap(269, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(35, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BTNborrar)
                .addContainerGap(482, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(40, 40, 40)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(128, Short.MAX_VALUE)))
        );

        jTabbedPane3.addTab("Dar de baja un alumno", jPanel2);

        jTabbedPane1.addTab("Baja", jTabbedPane3);

        TBLcambiosEstudiantes.setModel(TablaCambioEst);
        TBLcambiosEstudiantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBLcambiosEstudiantesMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(TBLcambiosEstudiantes);

        BTNmodificar.setText("Modificar");
        BTNmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNmodificarActionPerformed(evt);
            }
        });

        TXTcarreraCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTcarreraCambiosActionPerformed(evt);
            }
        });

        jLabel10.setText("Carrera:");

        jLabel9.setText("Nombre:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(TXTcarreraCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(BTNmodificar))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TXTnombreCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(TXTnombreCambios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(TXTcarreraCambios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTNmodificar))
                .addGap(83, 83, 83))
        );

        jTabbedPane4.addTab("Cambiar datos de un alumno", jPanel3);

        jTabbedPane1.addTab("Cambios", jTabbedPane4);

        jLabel18.setText("Carrera:");

        CBCarreraCons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBCarreraConsActionPerformed(evt);
            }
        });

        jLabel19.setText("Asesor");

        TBAlumnos.setModel(TablaConsultaEst);
        TBAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBAlumnosTBPuntajes1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TBAlumnos);

        jButton7.setText("Buscar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton2.setText("Ver Todos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CBCarreraCons, 0, 260, Short.MAX_VALUE)
                            .addComponent(CBAsesorCons, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(CBCarreraCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(CBAsesorCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7)
                            .addComponent(jButton2))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane5.addTab("Consultar datos de un alumno", jPanel4);

        jTabbedPane1.addTab("Consulta", jTabbedPane5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTNaltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNaltaActionPerformed
        // TODO add your handling code here:
        AltaEstudiante();
    }//GEN-LAST:event_BTNaltaActionPerformed

    private void BTNborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNborrarActionPerformed
        // TODO add your handling code here:
        BajaEstudiante();
    }//GEN-LAST:event_BTNborrarActionPerformed

    private void TBLbajaEstudiantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBLbajaEstudiantesMouseClicked
        // TODO add your handling code here:
        int Seleccion = TBLbajaEstudiantes.rowAtPoint(evt.getPoint());
        String TempC = String.valueOf(TBLbajaEstudiantes.getValueAt(Seleccion, 0));
        ID_BajaEst = Integer.parseInt(TempC);
    }//GEN-LAST:event_TBLbajaEstudiantesMouseClicked

    private void TBLcambiosEstudiantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBLcambiosEstudiantesMouseClicked
        // TODO add your handling code here:
        TXTnombreCambios.setText("");
        TXTcarreraCambios.setText("");
        int Seleccion = TBLcambiosEstudiantes.rowAtPoint(evt.getPoint());
        ID_CambioEst = Integer.parseInt(TBLcambiosEstudiantes.getModel().getValueAt(Seleccion, 0).toString());
        //LBLid.setText(TBLcambiosEstudiantes.getModel().getValueAt(Seleccion, 0).toString());
        TXTnombreCambios.setText(TBLcambiosEstudiantes.getModel().getValueAt(Seleccion, 1).toString());
        TXTcarreraCambios.setText(TBLcambiosEstudiantes.getModel().getValueAt(Seleccion, 2).toString());
        //String tempExp = (TBLcambiosEstudiantes.getModel().getValueAt(Seleccion, 3).toString());
    }//GEN-LAST:event_TBLcambiosEstudiantesMouseClicked

    private void BTNmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNmodificarActionPerformed
        // TODO add your handling code here:
        ModificarEstudiantes();

    }//GEN-LAST:event_BTNmodificarActionPerformed

    private void TXTcarreraCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTcarreraCambiosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTcarreraCambiosActionPerformed

    private void CBCarreraConsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBCarreraConsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBCarreraConsActionPerformed

    private void TBAlumnosTBPuntajes1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBAlumnosTBPuntajes1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TBAlumnosTBPuntajes1MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        BuscarAlumnosEspecificos();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        BuscarTodosAlumnos();
    }//GEN-LAST:event_jButton2ActionPerformed

    public boolean ValidarCajaNombreAltaEst() {
        return !TXTnombreAlta.getText().equals("");
    }

    public boolean ValidarCajaCarreraAltaEst() {
        return !TXTcarreraAlta.getText().equals("");
    }

    public boolean validarNC() {
        return !TXTnc.getText().equals("");
    }

    public void BuscarTodosEstudiantes() {
        TablaAltaEst = (DefaultTableModel) TBLaltaEstudiantes.getModel();
        int a = TablaAltaEst.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            TablaAltaEst.removeRow(TablaAltaEst.getRowCount() - 1);
        }
        if (mCC.conectar()) {
            ArrayList mArrayListEstudiantes = new ArrayList();
            mArrayListEstudiantes = mCC.ConsultarEstudiantes();
            String[] Datos = null;
            if (mArrayListEstudiantes != null) {

                for (int i = 0; i < mArrayListEstudiantes.size(); i++) {
                    mEstudiante = (Estudiante) mArrayListEstudiantes.get(i);
                    Datos = new String[3];

                    Datos[0] = mEstudiante.getNombre();
                    Datos[1] = mEstudiante.getCarrera();
                    Datos[2] = mEstudiante.getNC();
                    TablaAltaEst.addRow(Datos);
                }

            } else {
                //LBL_Mensajero2.setText("No hay puntajes");
            }
            this.TBLaltaEstudiantes = new javax.swing.JTable();
            this.TBLaltaEstudiantes.setModel(TablaAltaEst);
            this.TBLaltaEstudiantes.getColumnModel().getColumn(0).setPreferredWidth(50);
            this.TBLaltaEstudiantes.getColumnModel().getColumn(1).setPreferredWidth(50);
            this.TBLaltaEstudiantes.getColumnModel().getColumn(2).setPreferredWidth(100);
            if (this.TBLaltaEstudiantes.getRowCount() > 0) {
                this.TBLaltaEstudiantes.setRowSelectionInterval(0, 0);
            }

        } else {
            //LBL_Mensajero2.setText("Error al consultar");
        }

        mCC.desconectar();
    }

    public void AltaEstudiante() {
        try {
            Estudiante mEstudiante = new Estudiante();
            String texto = TXTnombreAlta.getText();
            String texto2 = TXTcarreraAlta.getText();
            texto = texto.replaceAll(" ", "");
            texto2 = texto2.replaceAll(" ", "");
            /*
                if ((((texto.length() == 0) || (texto.length() >= 150)) && ((texto2.length() == 0) || (texto2.length() >= 150)))) {
                JOptionPane.showMessageDialog(null, "Debe ingresar todos los datos correctamente");
            } else {*/
            if ((ValidarCajaNombreAltaEst() && ValidarCajaCarreraAltaEst() && validarNC())) {
                if (mCC.conectar()) {
                    mEstudiante.setNombre(TXTnombreAlta.getText());
                    mEstudiante.setCarrera(TXTcarreraAlta.getText());
                    mEstudiante.setNC(TXTnc.getText());
                    if (mCC.AltaEstudianteBasico(mEstudiante)) {
                        JOptionPane.showMessageDialog(null, "El estudiante fue guardado con éxito");
                        //CBasesorAlta.setSelectedIndex(0);
                        //CBexpedienteAlta.setSelectedIndex(0);
                        TXTnombreAlta.setText("");
                        TXTcarreraAlta.setText("");
                        TXTnc.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al guardar al estudiante");
                    }
                    mCC.desconectar();
                    BuscarTodosEstudiantes();
                    BuscarTodosEstudiantesBaja();
                    BuscarTodosEstudiantesCambio();
                    LlenarComboCarrera();
                    LlenarComboAsesor();
                    TXTnombreAlta.setText("");
                    TXTcarreraAlta.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe ingresar todos los datos correctamente");
                //}

            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "POR FAVOR, LLENE BIEN LOS DATOS");
        }
    }

    public void BajaEstudiante() {
        try {
            if (mCC.conectar()) {
                mEstudiante = new Estudiante();
                mEstudiante.setId_Estudiante(ID_BajaEst);
                if (mCC.EliminarEstudiante(mEstudiante)) {
                    if (ID_BajaEst != 0) {
                        JOptionPane.showMessageDialog(null, "Estudiante eliminado con éxito");
                    } else {
                        JOptionPane.showMessageDialog(null, "Seleccione un estudiante");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Este estudiante no se puede eliminar,tiene relacion con otros registros");
                }
                mCC.desconectar();
                BuscarTodosEstudiantes();
                BuscarTodosEstudiantesBaja();
                BuscarTodosEstudiantesCambio();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR, Seleccione un estudiante");
        }
    }

    public void BuscarTodosEstudiantesBaja() {
        TablaBajaEst = (DefaultTableModel) TBLbajaEstudiantes.getModel();
        int a = TablaBajaEst.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            TablaBajaEst.removeRow(TablaBajaEst.getRowCount() - 1);
        }
        if (mCC.conectar()) {
            ArrayList mArrayListEstudiantes = new ArrayList();
            mArrayListEstudiantes = mCC.ConsultarEstudiantes();
            String[] Datos = null;
            if (mArrayListEstudiantes != null) {

                for (int i = 0; i < mArrayListEstudiantes.size(); i++) {
                    mEstudiante = (Estudiante) mArrayListEstudiantes.get(i);
                    Datos = new String[3];
                    //Datos[0] = String.valueOf(mEstudiante.getId_Estudiante());
                    Datos[0] = mEstudiante.getNombre();
                    Datos[1] = mEstudiante.getCarrera();
                    Datos[2] = mEstudiante.getNC();
                    TablaBajaEst.addRow(Datos);
                }

            } else {
                //LBL_Mensajero2.setText("No hay puntajes");
            }
            this.TBLbajaEstudiantes = new javax.swing.JTable();
            this.TBLbajaEstudiantes.setModel(TablaBajaEst);
            this.TBLbajaEstudiantes.getColumnModel().getColumn(0).setPreferredWidth(50);
            this.TBLbajaEstudiantes.getColumnModel().getColumn(1).setPreferredWidth(50);
            this.TBLbajaEstudiantes.getColumnModel().getColumn(2).setPreferredWidth(50);
            //this.TBLbajaEstudiantes.getColumnModel().getColumn(3).setPreferredWidth(50);
            if (this.TBLbajaEstudiantes.getRowCount() > 0) {
                this.TBLbajaEstudiantes.setRowSelectionInterval(0, 0);
            }

        } else {
            //LBL_Mensajero2.setText("Error al consultar");
        }

        mCC.desconectar();
    }

    public void BuscarTodosEstudiantesCambio() {
        TablaCambioEst = (DefaultTableModel) TBLcambiosEstudiantes.getModel();
        int a = TablaCambioEst.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            TablaCambioEst.removeRow(TablaCambioEst.getRowCount() - 1);
        }
        if (mCC.conectar()) {
            ArrayList mArrayListEstudiantes = new ArrayList();
            mArrayListEstudiantes = mCC.ConsultarEstudiantes();
            String[] Datos = null;
            if (mArrayListEstudiantes != null) {

                for (int i = 0; i < mArrayListEstudiantes.size(); i++) {
                    mEstudiante = (Estudiante) mArrayListEstudiantes.get(i);
                    Datos = new String[3];

                    //Datos[0] = String.valueOf(mEstudiante.getId_Estudiante());
                    Datos[0] = mEstudiante.getNombre();
                    Datos[1] = mEstudiante.getCarrera();
                    Datos[2] = mEstudiante.getNC();

                    TablaCambioEst.addRow(Datos);
                }

            } else {
                //LBL_Mensajero2.setText("No hay puntajes");
            }
            this.TBLcambiosEstudiantes = new javax.swing.JTable();
            this.TBLcambiosEstudiantes.setModel(TablaCambioEst);
            this.TBLcambiosEstudiantes.getColumnModel().getColumn(0).setPreferredWidth(50);
            this.TBLcambiosEstudiantes.getColumnModel().getColumn(1).setPreferredWidth(50);
            this.TBLcambiosEstudiantes.getColumnModel().getColumn(2).setPreferredWidth(50);
            //this.TBLcambiosEstudiantes.getColumnModel().getColumn(3).setPreferredWidth(50);

            if (this.TBLcambiosEstudiantes.getRowCount() > 0) {
                this.TBLcambiosEstudiantes.setRowSelectionInterval(0, 0);
            }

        } else {
            //LBL_Mensajero2.setText("Error al consultar");
        }

        mCC.desconectar();
    }

    public void ModificarEstudiantes() {
        Estudiante nEstudiante = new Estudiante();

        String texto = TXTnombreCambios.getText();
        String texto2 = TXTcarreraCambios.getText();
        texto = texto.replaceAll(" ", "");
        texto2 = texto2.replaceAll(" ", "");
        if (((texto.length() == 0) || (texto.length() >= 150)) && ((texto2.length() == 0) || (texto2.length() >= 150))) {
            JOptionPane.showMessageDialog(null, "Debe ingresar todos los datos correctamente");
        } else {
            if (mCC.conectar()) {
                //ID = mCC.ConsultarIDAsesores(CBasesorCambios.getSelectedItem().toString());
                //ID2 = mCC.ConsultarIDExpediente(CBexpedienteCambios.getSelectedItem().toString());
                mEstudiante.setId_Estudiante(ID_CambioEst);
                nEstudiante.setNombre(this.TXTnombreCambios.getText());
                nEstudiante.setCarrera(this.TXTcarreraCambios.getText());
                nEstudiante.setId_Asesor(ID_BajaEst);
                if (ValidarCajaNombreCambioEst() && ValidarCajaCarreraCambioEst()) {
                    //nDatosEstudiante.setExpediente_idExpediente(ID2);
                    if (mCC.ModificarEstudiante(ID_CambioEst, TXTnombreCambios.getText(), TXTcarreraCambios.getText())) {
                        JOptionPane.showMessageDialog(null, "Estudiante modificado exitosamente");
                        LlenarComboCarrera();
                        LlenarComboAsesor();
                        TXTnombreCambios.setText("");
                        TXTcarreraCambios.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al modificar");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Error al llenar campos");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Error al conectar con la Base de Datos");
            }
            mCC.desconectar();

        }
        BuscarTodosEstudiantes();
        BuscarTodosEstudiantesBaja();
        BuscarTodosEstudiantesCambio();
    }

    public boolean ValidarCajaNombreCambioEst() {
        return !TXTnombreCambios.getText().equals("");
    }

    public boolean ValidarCajaCarreraCambioEst() {
        return !TXTcarreraCambios.getText().equals("");
    }

    public void BuscarTodosAlumnos() {
        TablaConsultaEst = (DefaultTableModel) TBAlumnos.getModel();
        int a = TablaConsultaEst.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            TablaConsultaEst.removeRow(TablaConsultaEst.getRowCount() - 1);
        }
        if (mCE.conectar()) {
            ArrayList mArrayListAlumnos = new ArrayList();
            mArrayListAlumnos = mCE.ConsultarTodosAlumnos();
            String[] Datos = null;
            if (mArrayListAlumnos != null) {

                for (int i = 0; i < mArrayListAlumnos.size(); i++) {
                    mEstudiante = (Estudiante) mArrayListAlumnos.get(i);
                    Datos = new String[3];
                    //ID_Asesor = mAsesor.getID_Asesor();
                    Datos[0] = mEstudiante.getNombre();
                    Datos[1] = mEstudiante.getCarrera();
                    Datos[2] = mEstudiante.getNC();
                    TablaConsultaEst.addRow(Datos);
                }

            } else {
                //LBL_Mensajero2.setText("No hay puntajes");
            }
            this.TBAlumnos = new javax.swing.JTable();
            this.TBAlumnos.setModel(TablaConsultaEst);
            this.TBAlumnos.getColumnModel().getColumn(0).setPreferredWidth(50);
            this.TBAlumnos.getColumnModel().getColumn(1).setPreferredWidth(50);
            this.TBAlumnos.getColumnModel().getColumn(2).setPreferredWidth(50);

            if (this.TBAlumnos.getRowCount() > 0) {
                this.TBAlumnos.setRowSelectionInterval(0, 0);
            }

        } else {
            //LBL_Mensajero2.setText("Error al consultar");
        }

        mCE.desconectar();
    }

    public void LlenarComboCarrera() {
        CBCarreraCons.removeAllItems();
        CBCarreraCons.addItem("Ninguno");

        if (mCE.conectar()) {
            ArrayList mArrayList = new ArrayList();
            mArrayList = mCE.ConsultaCarreraEstudiantes();
            if (mArrayList != null) {

                for (int i = 0; i < mArrayList.size(); i++) {
                    CBCarreraCons.addItem(mArrayList.get(i).toString());
                }

            } else {
                JOptionPane.showMessageDialog(null, "No tiene Carreras Dadas de Alta");
            }
            mCE.desconectar();
        } else {
            JOptionPane.showMessageDialog(null, "No conectado a la BD");
        }
    }

    public void LlenarComboAsesor() {
        CBAsesorCons.removeAllItems();
        CBAsesorCons.addItem("Sin asesor");
        CBAsesorCons.addItem("Cualquiera");

        if (mCE.conectar()) {
            ArrayList mArrayList = new ArrayList();
            mArrayList = mCE.ConsultaAsesorEstudiantes();
            if (mArrayList != null) {

                for (int i = 0; i < mArrayList.size(); i++) {
                    CBAsesorCons.addItem(mArrayList.get(i).toString());
                }

            } else {
                JOptionPane.showMessageDialog(null, "No tiene Asesores Dados de Alta");
            }
            mCE.desconectar();
        } else {
            JOptionPane.showMessageDialog(null, "No conectado a la BD");
        }
    }

    public void BuscarAlumnosEspecificos() {
        TablaConsultaEst = (DefaultTableModel) TBAlumnos.getModel();
        int a = TablaConsultaEst.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            TablaConsultaEst.removeRow(TablaConsultaEst.getRowCount() - 1);
        }
        if (mCE.conectar()) {
            ArrayList mArrayListAlumnos = new ArrayList();
            int IDAsesor = mCE.ConsultaIDAsesor(CBAsesorCons.getSelectedItem().toString());
            mArrayListAlumnos = mCE.ConsultarAlumnos(IDAsesor, CBCarreraCons.getSelectedItem().toString(), CBAsesorCons.getSelectedItem().toString(), mEstudiante.getNC());
            String[] Datos = null;
            if (mArrayListAlumnos != null) {

                for (int i = 0; i < mArrayListAlumnos.size(); i++) {
                    mEstudiante = (Estudiante) mArrayListAlumnos.get(i);
                    Datos = new String[3];
                    //ID_Asesor = mAsesor.getID_Asesor();
                    Datos[0] = mEstudiante.getNombre();
                    Datos[1] = mEstudiante.getCarrera();
                    Datos[2] = mEstudiante.getNC();
                    //Datos[2] = 
                    TablaConsultaEst.addRow(Datos);
                }

            } else {
                //LBL_Mensajero2.setText("No hay puntajes");
            }
            this.TBAlumnos = new javax.swing.JTable();
            this.TBAlumnos.setModel(TablaConsultaEst);
            this.TBAlumnos.getColumnModel().getColumn(0).setPreferredWidth(50);
            this.TBAlumnos.getColumnModel().getColumn(1).setPreferredWidth(50);
            this.TBAlumnos.getColumnModel().getColumn(2).setPreferredWidth(50);
            if (this.TBAlumnos.getRowCount() > 0) {
                this.TBAlumnos.setRowSelectionInterval(0, 0);
            }

        } else {
            //LBL_Mensajero2.setText("Error al consultar");
        }

        mCE.desconectar();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNalta;
    private javax.swing.JButton BTNborrar;
    private javax.swing.JButton BTNmodificar;
    private javax.swing.JComboBox<String> CBAsesorCons;
    private javax.swing.JComboBox<String> CBCarreraCons;
    private javax.swing.JTable TBAlumnos;
    private javax.swing.JTable TBLaltaEstudiantes;
    private javax.swing.JTable TBLbajaEstudiantes;
    private javax.swing.JTable TBLcambiosEstudiantes;
    private javax.swing.JTextField TXTcarreraAlta;
    private javax.swing.JTextField TXTcarreraCambios;
    private javax.swing.JTextField TXTnc;
    private javax.swing.JTextField TXTnombreAlta;
    private javax.swing.JTextField TXTnombreCambios;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    // End of variables declaration//GEN-END:variables
}
