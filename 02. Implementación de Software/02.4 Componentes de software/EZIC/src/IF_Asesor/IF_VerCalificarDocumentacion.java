/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IF_Asesor;

import Clases.Estudiante;
import Clases.PDF.*;
import Conexiones.*;
import Formularios.*;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eduardogarcia
 */
public class IF_VerCalificarDocumentacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form IF_VerCalificarDocumentacion
     */
    Estudiante mEstudiante;
    ConexionCinthia mCC = new ConexionCinthia();
    ConexionEduardo mCE = new ConexionEduardo();
    DefaultTableModel TablaConsultaEst = new DefaultTableModel();
    String ID_ConsultaEst = "";
    String ID_CambioEst = "";
    int ID_Estudiante = 0, ID_ExpedienteUltimo = 0;
    MostrarPDF mMPDF = new MostrarPDF();
    FRM_Login mFL = new FRM_Login();
    int idExp = 0;
    String nombre;
    String[] partes;
    String[] partesStatus;
    File archivo1, archivo2;
    OutputStream out;

    public IF_VerCalificarDocumentacion() {
        initComponents();
        TablaConsultaEst.addColumn("Nombre");
        TablaConsultaEst.addColumn("Carrera");
        TablaConsultaEst.addColumn("NÃºmero de Control");
        LlenarComboCarrera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        CBTitulosDoc = new javax.swing.JComboBox<>();
        BTN_VerDoc = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        CBCarreraCons = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        TBAlumnos = new javax.swing.JTable();
        LBL_NombreDoc = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CB_Status = new javax.swing.JComboBox<>();
        BTNAplicar = new javax.swing.JButton();

        setBorder(null);

        jLabel1.setText("Selecciona un documento para visualizarlo ");

        CBTitulosDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBTitulosDocItemStateChanged(evt);
            }
        });
        CBTitulosDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CBTitulosDocMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CBTitulosDocMouseClicked(evt);
            }
        });

        BTN_VerDoc.setText("Ver");
        BTN_VerDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_VerDocActionPerformed(evt);
            }
        });

        jLabel2.setText("Documento:");

        jLabel18.setText("Carrera:");

        CBCarreraCons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBCarreraConsActionPerformed(evt);
            }
        });

        jButton7.setText("Buscar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton2.setText("Ver Todos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        TBAlumnos.setModel(TablaConsultaEst);
        TBAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBAlumnosTBPuntajes1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TBAlumnos);

        LBL_NombreDoc.setText("-----------------------------------------------------------");

        jLabel3.setText("Estado:");

        CB_Status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No revisado", "Aprobado", "No Aprobado" }));

        BTNAplicar.setText("Aplicar");
        BTNAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNAplicarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(CBTitulosDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CBCarreraCons, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(BTN_VerDoc)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CB_Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(BTNAplicar)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(LBL_NombreDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(CBCarreraCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CBTitulosDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTN_VerDoc)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(LBL_NombreDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CB_Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTNAplicar))
                .addContainerGap(194, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_VerDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_VerDocActionPerformed
        // TODO add your handling code here:
        VerDocumento();
    }//GEN-LAST:event_BTN_VerDocActionPerformed

    private void CBCarreraConsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBCarreraConsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBCarreraConsActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        BuscarAlumnosEspecificos();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        BuscarTodosAlumnos();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TBAlumnosTBPuntajes1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBAlumnosTBPuntajes1MouseClicked
        // TODO add your handling code here:
        int Seleccion = TBAlumnos.rowAtPoint(evt.getPoint());
        String TempC = String.valueOf(TBAlumnos.getValueAt(Seleccion, 2));
        ID_ConsultaEst = TempC;
        LlenarComboTitulos();
    }//GEN-LAST:event_TBAlumnosTBPuntajes1MouseClicked

    private void BTNAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNAplicarActionPerformed
        // TODO add your handling code here:
        ModificarDocumento();
    }//GEN-LAST:event_BTNAplicarActionPerformed

    private void CBTitulosDocMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CBTitulosDocMousePressed
        // TODO add your handling code here:
        LBL_NombreDoc.setText(CBTitulosDoc.getSelectedItem().toString());
    }//GEN-LAST:event_CBTitulosDocMousePressed

    private void CBTitulosDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CBTitulosDocMouseClicked
        // TODO add your handling code here:
        LBL_NombreDoc.setText(CBTitulosDoc.getSelectedItem().toString());
    }//GEN-LAST:event_CBTitulosDocMouseClicked

    private void CBTitulosDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBTitulosDocItemStateChanged
        // TODO add your handling code here:
        ActualizarCBTitulos();

    }//GEN-LAST:event_CBTitulosDocItemStateChanged

    public void VerDocumento() {
        String ArchivoPDF = "PruebaDoc.pdf";
        boolean correcto = false;
        boolean SO = true;
        try {
            out = new FileOutputStream(ArchivoPDF);
            if (mCE.conectar()) {
                String separador = Pattern.quote("(");
                String[] partes;
                partes = CBTitulosDoc.getSelectedItem().toString().split(separador);
                out.write(mCE.MandarPDF(partes[0]));
                mCE.desconectar();
                out.close();
                correcto = true;
                try {

                    Runtime.getRuntime().exec("open " + ArchivoPDF);

                } catch (IOException e) {
                    e.printStackTrace();
                    Runtime.getRuntime().exec("start \"\" /max " + ArchivoPDF + "\"");  //pal Windowds
                }
            } else {

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void LlenarComboTitulos() {
        CBTitulosDoc.removeAllItems();
        if (mCE.conectar()) {
            ArrayList mArrayList = new ArrayList();
            ArrayList mArrayListStatus = new ArrayList();
            idExp = mCE.ConsultarIDExpediente("Expediente_" + ID_ConsultaEst);
            mArrayList = mCE.ConsultarDocumentosAlumnos(idExp);
            mArrayListStatus = mCE.ConsultarStatusAlumnos(idExp);
            if (mArrayList != null) {

                for (int i = 0; i < mArrayList.size(); i++) {
                    CBTitulosDoc.addItem(mArrayList.get(i).toString() + "(" + mArrayListStatus.get(i).toString() + ")");
                }

            } else {
                JOptionPane.showMessageDialog(null, "No tiene Asesores Dados de Alta");
            }
            mCE.desconectar();
        } else {
            JOptionPane.showMessageDialog(null, "No conectado a la BD");
        }
    }

    public void BuscarTodosAlumnos() {
        TablaConsultaEst = (DefaultTableModel) TBAlumnos.getModel();
        int a = TablaConsultaEst.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            TablaConsultaEst.removeRow(TablaConsultaEst.getRowCount() - 1);
        }
        if (mCE.conectar()) {
            ArrayList mArrayListAlumnos = new ArrayList();
            mArrayListAlumnos = mCE.ConsultarTodosAlumnosParaAsesor(Integer.parseInt(mFL.Pass));
            String[] Datos = null;
            if (mArrayListAlumnos != null) {

                for (int i = 0; i < mArrayListAlumnos.size(); i++) {
                    mEstudiante = (Estudiante) mArrayListAlumnos.get(i);
                    Datos = new String[3];
                    //ID_Asesor = mAsesor.getID_Asesor();
                    Datos[0] = mEstudiante.getNombre();
                    Datos[1] = mEstudiante.getCarrera();
                    Datos[2] = mEstudiante.getNC();
                    TablaConsultaEst.addRow(Datos);
                }

            } else {
                //LBL_Mensajero2.setText("No hay puntajes");
            }
            this.TBAlumnos = new javax.swing.JTable();
            this.TBAlumnos.setModel(TablaConsultaEst);
            this.TBAlumnos.getColumnModel().getColumn(0).setPreferredWidth(50);
            this.TBAlumnos.getColumnModel().getColumn(1).setPreferredWidth(50);
            this.TBAlumnos.getColumnModel().getColumn(2).setPreferredWidth(50);

            if (this.TBAlumnos.getRowCount() > 0) {
                this.TBAlumnos.setRowSelectionInterval(0, 0);
            }

        } else {
            //LBL_Mensajero2.setText("Error al consultar");
        }

        mCE.desconectar();
    }

    public void LlenarComboCarrera() {
        CBCarreraCons.removeAllItems();
        CBCarreraCons.addItem("Ninguno");

        if (mCE.conectar()) {
            ArrayList mArrayList = new ArrayList();
            mArrayList = mCE.ConsultaCarreraEstudiantesAsignadosAsesor(Integer.parseInt(mFL.Pass));
            if (mArrayList != null) {

                for (int i = 0; i < mArrayList.size(); i++) {
                    CBCarreraCons.addItem(mArrayList.get(i).toString());
                }

            } else {
                JOptionPane.showMessageDialog(null, "No tiene Carreras Dadas de Alta");
            }
            mCE.desconectar();
        } else {
            JOptionPane.showMessageDialog(null, "No conectado a la BD");
        }
    }

    public void BuscarAlumnosEspecificos() {
        TablaConsultaEst = (DefaultTableModel) TBAlumnos.getModel();
        int a = TablaConsultaEst.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            TablaConsultaEst.removeRow(TablaConsultaEst.getRowCount() - 1);
        }
        if (mCE.conectar()) {
            ArrayList mArrayListAlumnos = new ArrayList();
            //int IDAsesor = mCE.ConsultaIDAsesor(mFL.Pass);
            mArrayListAlumnos = mCE.ConsultarAlumnosParaAsesor(Integer.parseInt(mFL.Pass), CBCarreraCons.getSelectedItem().toString());
            String[] Datos = null;
            if (mArrayListAlumnos != null) {

                for (int i = 0; i < mArrayListAlumnos.size(); i++) {
                    mEstudiante = (Estudiante) mArrayListAlumnos.get(i);
                    Datos = new String[3];
                    //ID_Asesor = mAsesor.getID_Asesor();
                    Datos[0] = mEstudiante.getNombre();
                    Datos[1] = mEstudiante.getCarrera();
                    Datos[2] = mEstudiante.getNC();
                    //Datos[2] = 
                    TablaConsultaEst.addRow(Datos);
                }

            } else {
                //LBL_Mensajero2.setText("No hay puntajes");
            }
            this.TBAlumnos = new javax.swing.JTable();
            this.TBAlumnos.setModel(TablaConsultaEst);
            this.TBAlumnos.getColumnModel().getColumn(0).setPreferredWidth(50);
            this.TBAlumnos.getColumnModel().getColumn(1).setPreferredWidth(50);
            this.TBAlumnos.getColumnModel().getColumn(2).setPreferredWidth(50);
            if (this.TBAlumnos.getRowCount() > 0) {
                this.TBAlumnos.setRowSelectionInterval(0, 0);
            }

        } else {
            //LBL_Mensajero2.setText("Error al consultar");
        }

        mCE.desconectar();
    }
    
    public void ModificarDocumento() {
        if (CBTitulosDoc.getItemCount() != 0) {
            if (mCE.conectar()) {
                if (mCE.ModificarEstadoDocumento(LBL_NombreDoc.getText(), CB_Status.getSelectedItem().toString())) {
                    //LBL_Mensajero2.setText("Se realizÃ³ un cambio");
                    JOptionPane.showMessageDialog(null, "Cambio realizado");
                    LBL_NombreDoc.setText("-----------------------------------------------------------");
                    CB_Status.setSelectedIndex(0);
                    ActualizarCBTitulos();
                    LlenarComboTitulos();
                    mCE.desconectar();
                } else {
                    //no se hizo modificacion
                    JOptionPane.showMessageDialog(null, "No se realizÃ³ el cambio");
                }
            } else {
                //no conectado
                JOptionPane.showMessageDialog(null, "No conectado a la BD");
            }
        } else {
            //llenar bien campos
            JOptionPane.showMessageDialog(null, "Llenar bien los campos");
        }

    }
    
    public void ActualizarCBTitulos() {
        if (CBTitulosDoc.getItemCount() != 0) {
            String separador = Pattern.quote("(");
            String separadorStatus = Pattern.quote(")");
            partes = CBTitulosDoc.getSelectedItem().toString().split(separador);
            partesStatus = partes[1].split(separadorStatus);
            LBL_NombreDoc.setText(partes[0]);
            if ("No revisado".equals(partesStatus[0])) {
                CB_Status.setSelectedIndex(0);
            } else {
                if ("Aprobado".equals(partesStatus[0])) {
                    CB_Status.setSelectedIndex(1);
                } else {
                    CB_Status.setSelectedIndex(2);  //No Aprobado
                }
            }
        } else {

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNAplicar;
    private javax.swing.JButton BTN_VerDoc;
    private javax.swing.JComboBox<String> CBCarreraCons;
    private javax.swing.JComboBox<String> CBTitulosDoc;
    private javax.swing.JComboBox<String> CB_Status;
    private javax.swing.JLabel LBL_NombreDoc;
    private javax.swing.JTable TBAlumnos;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
